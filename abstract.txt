Docker Based C++ Dependency and Build Management

If you are looking to bootstrap a new C++ project, or want an easier way to contribute to your favorite open source library all with elaborate library and system dependencies, then this talk is for you!

In this presentation, we will get up to speed with Docker and how its multi-stage build process can be used to build C++ programs. Starting with a fresh system, we will compile our compiler toolchains, install build tools, and resolve library dependencies to get a tutorial project up and running, targeting multiple platforms as well as using documentation and testing resources.

We will also look at CppDock, a tool to help manage dependencies and hide much of the tedious Docker command-line for common cases such as creating build environment containers and installing target files to the host environment.



OUTLINE:

What is Docker?
Compiling a Compiler
Getting and Compiling Libraries
Installing Required Build Tools
Documentation and Testing Resources
Distributed Builds in the Cloud (maybe)



BIO:

Jason is a web applications programmer with an appetite for C++ everywhere. He is actively working on the library Nbdl, waiting for the day when C++ takes over the web.
